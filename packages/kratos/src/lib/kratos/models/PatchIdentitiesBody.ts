/* tslint:disable */
/* eslint-disable */
/**
 * Ory Identities API
 * This is the API specification for Ory Identities with features such as registration, login, recovery, account verification, profile settings, password reset, identity management, session management, email and sms delivery, and more. 
 *
 * The version of the OpenAPI document: v1.3.1
 * Contact: office@ory.sh
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { IdentityPatch } from './IdentityPatch';
import {
    IdentityPatchFromJSON,
    IdentityPatchFromJSONTyped,
    IdentityPatchToJSON,
} from './IdentityPatch';

/**
 * Patch Identities Body
 * @export
 * @interface PatchIdentitiesBody
 */
export interface PatchIdentitiesBody {
    /**
     * Identities holds the list of patches to apply
     * 
     * required
     * @type {Array<IdentityPatch>}
     * @memberof PatchIdentitiesBody
     */
    identities?: Array<IdentityPatch>;
}

/**
 * Check if a given object implements the PatchIdentitiesBody interface.
 */
export function instanceOfPatchIdentitiesBody(value: object): value is PatchIdentitiesBody {
    return true;
}

export function PatchIdentitiesBodyFromJSON(json: any): PatchIdentitiesBody {
    return PatchIdentitiesBodyFromJSONTyped(json, false);
}

export function PatchIdentitiesBodyFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchIdentitiesBody {
    if (json == null) {
        return json;
    }
    return {
        
        'identities': json['identities'] == null ? undefined : ((json['identities'] as Array<any>).map(IdentityPatchFromJSON)),
    };
}

export function PatchIdentitiesBodyToJSON(value?: PatchIdentitiesBody | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'identities': value['identities'] == null ? undefined : ((value['identities'] as Array<any>).map(IdentityPatchToJSON)),
    };
}

